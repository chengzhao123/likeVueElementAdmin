{"code":"webpackHotUpdate(0,{21:function(e,t,i){\"use strict\";var a=i(5),o=i(20),n=i(166),s=i(111);var r=[{path:\"/user\",component:s.a,meta:{roles:[\"admin\"],icon:\"admin\",title:\"用户管理\"},children:[{path:\"userList\",component:()=>i.e(7).then(i.bind(null,836)),name:\"UserList\",meta:{title:\"用户列表\",icon:\"admin\"}}]},{path:\"/article\",component:s.a,name:\"Article\",meta:{title:\"商品管理\",icon:\"admin\"},children:[{path:\"list\",component:()=>i.e(4).then(i.bind(null,831)),name:\"Article List\",meta:{title:\"商品列表\",icon:\"admin\"}},{path:\"edit\",component:()=>i.e(3).then(i.bind(null,832)),name:\"Articl Edit\",meta:{title:\"分类管理\",icon:\"admin\",roles:[\"admin\"]}}]},{path:\"/permission\",component:s.a,meta:{roles:[\"admin\"],title:\"权限管理\",icon:\"admin\"},children:[{path:\"list\",component:()=>i.e(8).then(i.bind(null,846)),name:\"roleList\",meta:{title:\"角色列表\",icon:\"admin\"}},{path:\"role\",component:()=>i.e(6).then(i.bind(null,833)),name:\"permission Role\",meta:{title:\"角色权限\",icon:\"admin\"}}]},{path:\"*\",redirect:\"/404\",hidden:!0}];var m={namespaced:!0,state:{addRoutes:[],routes:[]},mutations:{SET_ROUTES:(e,t)=>{e.addRoutes=t,e.routes=n.a.concat(t)}},actions:{generateRoutes:({commit:e},t)=>new Promise(i=>{let a;a=t.includes(\"admin\")?r||[]:function e(t,i){const a=[];return t.forEach(t=>{const o={...t};(function(e,t){return!t.meta||!t.meta.roles||e.some(e=>t.meta.roles.includes(e))})(i,o)&&(o.children&&(o.children=e(o.children,i)),a.push(o))}),a}(r,t),e(\"SET_ROUTES\",a),i(a)})}},d=i(42),c=i(36);var l={namespaced:!0,state:{token:Object(d.a)(),name:\"\",avatar:\"\",introduction:\"\",roles:[]},mutations:{SET_TOKEN:(e,t)=>{e.token=t},SET_INTRODUCTION:(e,t)=>{e.introduction=t},SET_NAME:(e,t)=>{e.name=t},SET_AVATAR:(e,t)=>{e.avatar=t},SET_ROLES:(e,t)=>{e.roles=t}},actions:{login:({commit:e},t)=>new Promise((i,a)=>{const{userName:o}=t;let n=\"\";n=\"admin\"==o.trim().toLowerCase()?\"admin\":\"editor\",e(\"SET_TOKEN\",n),Object(d.c)(n),i()}),getInfo:({commit:e,state:t})=>new Promise((i,a)=>{\"admin\"==Object(d.a)()?e(\"SET_ROLES\",[\"admin\"]):e(\"SET_ROLES\",[\"editor\"]),e(\"SET_NAME\",\"name\"),e(\"SET_AVATAR\",\"avatar\"),e(\"SET_INTRODUCTION\",\"introduction\"),i(t.roles)}),resetToken:({commit:e})=>new Promise(t=>{e(\"SET_TOKEN\",\"\"),e(\"SET_ROLES\",[]),Object(d.b)(),t()}),logout:({commit:e,state:t,dispatch:i})=>new Promise((t,i)=>{document.getElementsByClassName(\"audioTag\").length>0&&document.getElementById(\"app\").removeChild(document.getElementsByClassName(\"audioTag\")[0]),e(\"SET_TOKEN\",\"\"),e(\"SET_ROLES\",[]),Object(d.b)(),Object(c.b)(),t()}),async changeRoles({commit:e,dispatch:t},i){const a=i.join(\"\");e(\"SET_ROLES\",i),e(\"SET_TOKEN\",a),Object(d.c)(a),Object(c.b)();const o=await t(\"permission/generateRoutes\",i,{root:!0});c.a.addRoutes(o)}}};var E={namespaced:!0,state:{sidebar:{opened:!0},device:\"pc\",showSetting:!1,headerVal:!0},actions:{toggleSideBar({commit:e}){e(\"TOGGLE_SIDEBAR\")},setSiderBar({commit:e},t){e(\"SET_SIDEBAR\",t)},setDevice({commit:e},t){e(\"SET_DEVICE\",t)},setShowSetting({commit:e},t){e(\"SET_SHOWSETTING\",t)},setHeaderVal({commit:e},t){e(\"SET_HEADERVAL\",t)}},mutations:{TOGGLE_SIDEBAR:e=>{e.sidebar.opened=!e.sidebar.opened},SET_SIDEBAR:(e,t)=>{e.sidebar.opened=t},SET_DEVICE:(e,t)=>{e.device=t},SET_SHOWSETTING:(e,t)=>{e.showSetting=t},SET_HEADERVAL:(e,t)=>{e.headerVal=t}}};var S={sidebar:e=>e.app.sidebar,device:e=>e.app.device,headerVal:e=>e.app.headerVal,showSetting:e=>e.app.showSetting,token:e=>e.user.token,avatar:e=>e.user.avatar,name:e=>e.user.name,introduction:e=>e.user.introduction,roles:e=>e.user.roles,permission_routes:e=>e.permission.routes};const T={userList:[],roleList:[]},u={addUserList:({commit:e},t)=>new Promise((i,a)=>{e(\"ADD_USERLIST\",t),i()}),delUserList:({commit:e,state:t},i)=>new Promise((a,o)=>{let n=t.userList.filter(e=>e.userId!=i.userId);e(\"DEL_USERLIST\",n),a()}),editUserList:({commit:e,state:t},i)=>new Promise((a,o)=>{let n=t.userList.map(e=>e.userId==i.userId?i:e);e(\"EDIT_USERLIST\",n),a()}),changeUserRole:({commit:e},t)=>new Promise((i,a)=>{let o=T.userList.map(e=>e.userId==t.userId?t:e);e(\"EDIT_USERLIST\",o),i()}),addRoleList:({commit:e},t)=>new Promise((i,a)=>{e(\"ADD_ROLELIST\",t),i()}),delRoleList:({commit:e,state:t},i)=>new Promise((a,o)=>{let n=t.roleList.filter(e=>e.roleId!=i.roleId);e(\"DEL_ROLELIST\",n),a()}),editRoleList:({commit:e,state:t},i)=>new Promise((a,o)=>{let n=t.roleList.map(e=>e.roleId==i.roleId?i:e);e(\"EDIT_ROLELIST\",n),a()})};var L={namespaced:!0,state:T,mutations:{ADD_USERLIST:(e,t)=>{e.userList.push(t)},EDIT_USERLIST:(e,t)=>{e.userList=t},DEL_USERLIST:(e,t)=>{e.userList=t},ADD_ROLELIST:(e,t)=>{e.roleList.push(t)},EDIT_ROLELIST:(e,t)=>{e.roleList=t},DEL_ROLELIST:(e,t)=>{e.roleList=t}},actions:u};a.default.use(o.a);const p=new o.a.Store({modules:{permission:m,user:l,app:E,data:L},getters:S});t.a=p}});","extractedComments":[]}